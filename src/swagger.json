{
  "openapi":"3.0.0",
  "info": {
    "title":"Template API NodeJS + TypeScript + TypeORM",
    "description": "Template API NodeJS + TypeScript + TypeORM",
    "version": "1.0.0",
    "contact":{
      "email": "mdauri@gmail.com"
    }
  },
  "paths":{
    "/categories": {
      "post":{
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name":"Category Name Sample",
                  "description": "Category Description Sample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500":{
            "description": "Category already exists"
          }
        }
      },
      "get":{
        "tags": ["Category"],
        "summary": "List all categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json":{
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description": "Category already exists"
          }
        }
      }
    },
    "/categories/import":{
      "post": {
        "tags": ["Category"],
        "summary": "Upload new categories",
        "description": "Upload new categories",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "content":{
            "multipart/form-data": {
              "schema":{
                "type":"object",
                "properties":{
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses":{
          "201":{
            "description":"Created"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specifications"],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses" :{
          "201":{
            "description": "Created"
          },
          "500":{
            "description": "Specification already exists"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Authentication user",
        "description": "Authentication user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "email": {
                    "type":"string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }   
        },
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/refresh_token": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Refresh Token",
        "description": "Refresh Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "token": {
                    "type":"string"
                  }                  
                }
              }
            }
          }   
        },
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "Refresh Token does not exists"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create user",
        "description": "Create user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "name": {
                    "type":"string"
                  },
                  "username": {
                    "type":"string"
                  },
                  "email": {
                    "type":"string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }   
        },
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "User already exists"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Upload user avatar",
        "description": "Upload user avatar",
        "security":[
          {"bearerAuth": []}
        ],
        "requestBody":{
          "content":{
            "multipart/form-data":{
              "schema":{
                "type": "object",
                "properties": {
                  "avatar":{
                    "type": "string",
                    "format": "binary"                    
                  }
                }
              }
            }
          }
        },
        "responses":{
          "201":{
            "description": "Created"
          }          
        }
      }
    },
    "/profile": {
    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "User profile",
        "description": "User profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "email": {
                    "type":"string"
                  },
                  "name": {
                    "type":"string"
                  },
                  "id": {
                    "type":"string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  }

                  }                  
                }
              }
            }
          }   
        },        
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "User already exists"
          }
        }
      }
    },
    "/password/reset/{refresh_token}": {
      "post": {
        "tags": ["Users"],
        "summary": "User password reset",
        "description": "User password reset",
        "parameters": [
          {
            "refresh_token": "id",
            "in": "path",
            "description": "refresh token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "password": {
                    "type":"string"
                  }   
                }
              }
            }
          }   
        },
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "Invalid token"
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "tags": ["Users"],
        "summary": "User password forgot",
        "description": "User password forgot",        
        "requestBody": {
          "content": {
            "application/json": {
              "schema":{
                "type":"object",
                "properties": {
                  "email": {
                    "type":"string"
                  }   
                }
              }
            }
          }   
        },
        "responses":{
          "200":{
            "description": "Success"
          },
          "400":{
            "description": "Invalid email"
          }
        }
      }
    },
    "/cars":{
      "post":{
        "tags": ["Cars"],
        "summary": "Creater a new car",
        "description":"Create a new car",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/definitions/Car"
              }
            }
          }
        },
        "responses":{
          "201":{
            "description": "Created"
          },
          "400":{
            "description": "Car already exists"
          }
        }
      }
    },
    "/cars/images/{id}": {
      "post":{
        "tags":["Cars"],
        "summary": "Upload images",
        "description": "Upload images",
        "security":[
          {"bearerAuth": []}
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "multipart/form-data":{
              "schema":{
                "type": "object",
                "properties": {
                  "images":{
                    "type": "array",
                    "items":{
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses":{
          "201": {
            "description": "Created"
          }
        }
      }
    }
  },
  "definitions": {
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "name": {
          "type":"string"
        },
        "description": {
          "type":"string"
        },
        "daily_rate":{
          "type": "number"
        },
        "license_plate":{
          "type": "string"
        },
        "fine_amount":{
          "type": "number"
        },
        "brand":{
          "type": "string"
        },
        "category_id": {
          "type":"string"
        }
      }
    }
  },
  "components":{
    "securitySchemes": {
      "bearerAuth":{
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}